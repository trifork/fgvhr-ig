# Use Ruby as build. It will not be published, but will 
# generate files to /output
FROM ruby:3.2 as build
ARG FSH_SUSHI_VERSION=3.10.0

# https://github.com/inadarei/alpine-jekyll/blob/master/Dockerfile
RUN gem install --no-document \
        redcarpet \
        kramdown \
        maruku \
        rdiscount \
        RedCloth \
        liquid \
        pygments.rb \
        safe_yaml \
        jekyll \
        jekyll-paginate \
        jekyll-sass-converter \
        jekyll-sitemap \
        jekyll-feed \
        jekyll-redirect-from

# add node
RUN apt-get update && apt-get install nodejs npm --no-install-recommends -y --fix-missing

# add java
RUN apt-get install -y openjdk-17-jdk
ENV JAVA_HOME /usr/lib/jvm/java-1.17-openjdk
ENV PATH $PATH:/usr/lib/jvm/java-1.17-openjdk/jre/bin:/usr/lib/jvm/java-1.17-openjdk/bin

# add misc
RUN apt-get install -y curl jq --no-install-recommends

# anticipate source mounted to /src
RUN mkdir -p /src
WORKDIR /src

# Handle Jekyll error because it can't create the following folder
RUN mkdir ./temp/pages/.jekyll-cache ./output -p

COPY ["_downloadPublisher.sh", "_downloadPublisher.sh"]
COPY ["_genonce.sh", "_genonce.sh"]

# Allow the following .sh files to be executed
RUN chmod u+x ./_downloadPublisher.sh ./_genonce.sh

# Download the fhir-ig-publisher
RUN ./_downloadPublisher.sh



# # Make it skip installation process, because it's always the same
# FROM build as worker

# add the sushi tool
RUN npm install -g fsh-sushi@${FSH_SUSHI_VERSION}
